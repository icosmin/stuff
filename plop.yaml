apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"backup-pv-pod","namespace":"privx"},"spec":{"containers":[{"image":"nginx","name":"privx-config","ports":[{"containerPort":80,"name":"http-server"}],"volumeMounts":[{"mountPath":"/usr/share/privx","name":"privx-config"}]}],"volumes":[{"name":"privx-config","persistentVolumeClaim":{"claimName":"privx-claim"}}]}}
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T14:03:18Z"
    name: backup-pv-pod
    namespace: privx
    resourceVersion: "5084592"
    uid: c2329af3-baa0-44a9-beeb-856070a923b9
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: privx-config
      ports:
      - containerPort: 80
        name: http-server
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/privx
        name: privx-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8bpvb
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-8bpvb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T14:03:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T14:03:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T14:03:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T14:03:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b102f7622c9a7ff2c098b9c0c5fd54c95e9f3eac23586ca7388cf53b1f6f1713
      image: nginx
      imageID: docker-pullable://nginx@sha256:2ab30d6ac53580a6db8b657abf0f68d75360ff5cc1670a85acb5bd85ba1b19c0
      lastState: {}
      name: privx-config
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T14:03:25Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.148
    podIPs:
    - ip: 172.16.0.148
    qosClass: BestEffort
    startTime: "2023-03-29T14:03:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:01:59Z"
    generateName: privx-auth-5994b97c49-
    labels:
      app.kubernetes.io/name: privx-auth
      pod-template-hash: 5994b97c49
    name: privx-auth-5994b97c49-sjk7s
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-auth-5994b97c49
      uid: 8f6129c7-c1aa-4436-9f37-10e4da642002
    resourceVersion: "4975889"
    uid: 2e374c22-979d-47b1-aa78-440b32279bca
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/auth:27.0
      imagePullPolicy: IfNotPresent
      name: privx-auth
      ports:
      - containerPort: 8083
        name: http
        protocol: TCP
      - containerPort: 8183
        name: oidc
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vmsmf
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: auth
    serviceAccountName: auth
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-vmsmf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:01:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:01:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://de0775ef42bfeaea28e3e1167c570ac2b83ae9cb74e046507666c4668b76b3be
      image: public.ecr.aws/sshprivx/auth:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/auth@sha256:a54f90e11553ac309dde2f8926564e320859b8187d2b3b19763bfceb335dfc25
      lastState: {}
      name: privx-auth
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:04Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.89
    podIPs:
    - ip: 172.16.0.89
    qosClass: BestEffort
    startTime: "2023-03-29T10:01:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:01:59Z"
    generateName: privx-authorizer-5598bc98b8-
    labels:
      app.kubernetes.io/name: privx-authorizer
      pod-template-hash: 5598bc98b8
    name: privx-authorizer-5598bc98b8-xtrmb
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-authorizer-5598bc98b8
      uid: d15d5958-ea33-45ab-b7da-811a8b566124
    resourceVersion: "4975909"
    uid: fee751a3-e98b-4781-a282-2dd84f73529c
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/authorizer:27.0
      imagePullPolicy: IfNotPresent
      name: privx-authorizer
      ports:
      - containerPort: 8082
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2xqp
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: authorizer
    serviceAccountName: authorizer
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-n2xqp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:01:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:01:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3122b6e3910bec78da7e4371c378e5d28af5f0cf2f6d2a2767a35f75e948a220
      image: public.ecr.aws/sshprivx/authorizer:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/authorizer@sha256:fffbc9c5fb4b44ba5a8d710611e1564fa7a1e622187b63316449f7a65b070697
      lastState: {}
      name: privx-authorizer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:06Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.96
    podIPs:
    - ip: 172.16.0.96
    qosClass: BestEffort
    startTime: "2023-03-29T10:01:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2023-03-30T08:29:46Z"
    generateName: privx-cert-updater-d4fcdb554-
    labels:
      app.kubernetes.io/name: privx-cert-updater
      pod-template-hash: d4fcdb554
    name: privx-cert-updater-d4fcdb554-vtwck
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-cert-updater-d4fcdb554
      uid: 8a0abb48-24b9-4c76-95d4-4505b982aa6a
    resourceVersion: "5580935"
    uid: 79907258-4dde-4941-b876-3500f02cbf12
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: INFO
      - name: SMARTCARD_LOG_LEVEL
        value: INFO
      - name: SSH_TRACE
        value: "1"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      - name: INSTALLER_CMD
        value: update-trust
      - name: TRUST_CERT_PATH
        value: /etc/nginx/ca/ca.crt
      image: public.ecr.aws/sshprivx/installer:27.0
      imagePullPolicy: IfNotPresent
      name: privx-cert-updater
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ca
        name: privx-ca-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-56tkx
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: cert-updater
    serviceAccountName: cert-updater
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: privx-ca-vol
      secret:
        defaultMode: 420
        secretName: privx-ca-secret
    - name: kube-api-access-56tkx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-30T08:29:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-30T08:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-30T08:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-30T08:29:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bcdea80764418d26150750155c7a287c53b289a50728b8482f985908e941705c
      image: public.ecr.aws/sshprivx/installer:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/installer@sha256:5e80fda2f91aba1d559d2229cd462e4ea5fc4a35db9de121ba614243f0374b10
      lastState: {}
      name: privx-cert-updater
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-30T08:29:49Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.149
    podIPs:
    - ip: 172.16.0.149
    qosClass: BestEffort
    startTime: "2023-03-30T08:29:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:01:59Z"
    generateName: privx-connection-manager-85d55bf64b-
    labels:
      app.kubernetes.io/name: privx-connection-manager
      pod-template-hash: 85d55bf64b
    name: privx-connection-manager-85d55bf64b-k6t6b
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-connection-manager-85d55bf64b
      uid: 373bbd9c-54ea-4056-98df-58c36c9e0b46
    resourceVersion: "4975932"
    uid: 104507ee-f031-4c8c-ba73-8beb450018fe
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/connection-manager:27.0
      imagePullPolicy: IfNotPresent
      name: privx-connection-manager
      ports:
      - containerPort: 8091
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/privx/audit
        name: privx-config
        subPath: privxaudit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mbb8q
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: connection-manager
    serviceAccountName: connection-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-mbb8q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:01:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:01:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a52e38f09c06b45a6a43e57f456597a181d63216cfcd20f0f53a675ae4e1bd54
      image: public.ecr.aws/sshprivx/connection-manager:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/connection-manager@sha256:0b9fb0f7041f626ff7d50646bed8614841d0962ea719cc9713d5c4e2bafffb4f
      lastState: {}
      name: privx-connection-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:07Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.98
    podIPs:
    - ip: 172.16.0.98
    qosClass: BestEffort
    startTime: "2023-03-29T10:01:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-extender-service-787f4b468-
    labels:
      app.kubernetes.io/name: privx-extender-service
      pod-template-hash: 787f4b468
    name: privx-extender-service-787f4b468-s5mlf
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-extender-service-787f4b468
      uid: 418aaef3-29d2-44db-a541-60d37ab3dd07
    resourceVersion: "4975963"
    uid: dba2a669-cd89-409a-9430-f113515c8b3b
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/extender-service:27.0
      imagePullPolicy: IfNotPresent
      name: privx-extender-service
      ports:
      - containerPort: 8981
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qrssx
        readOnly: true
    dnsConfig:
      options:
      - name: timeout
        value: "2"
      - name: single-request-reopen
        value: ""
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: extender-service
    serviceAccountName: extender-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-qrssx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://893f9b7d29e97d2fc41adc7e8b9d7fb7c7e01da7479e291293c94f53a5410ea0
      image: public.ecr.aws/sshprivx/extender-service:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/extender-service@sha256:a2f192fde1538530ef488e4aa15a074b98b971ec0fcfdc20385a61ee7b7d3b8e
      lastState: {}
      name: privx-extender-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:07Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.99
    podIPs:
    - ip: 172.16.0.99
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-host-store-7cf77df5dc-
    labels:
      app.kubernetes.io/name: privx-host-store
      pod-template-hash: 7cf77df5dc
    name: privx-host-store-7cf77df5dc-rmmqs
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-host-store-7cf77df5dc
      uid: c1638033-8acd-4717-ae9c-d7d9c4c3e6c9
    resourceVersion: "4975951"
    uid: 54c24c02-4c6c-4f5a-9dc4-dcacb1c01204
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/host-store:27.0
      imagePullPolicy: IfNotPresent
      name: privx-host-store
      ports:
      - containerPort: 8882
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nvbkv
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: host-store
    serviceAccountName: host-store
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-nvbkv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3c5b574eda50c5a5637f0f59945c937a3d76f92368dc1ab5da25b8b9bc7fd559
      image: public.ecr.aws/sshprivx/host-store:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/host-store@sha256:ed4a76db095c1b836d3c9213acf1e6e47fc9aba8c862360e8b4a80cf5aa9adba
      lastState: {}
      name: privx-host-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:08Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.100
    podIPs:
    - ip: 172.16.0.100
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-keyvault-7c9f4df459-
    labels:
      app.kubernetes.io/name: privx-keyvault
      pod-template-hash: 7c9f4df459
    name: privx-keyvault-7c9f4df459-j565b
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-keyvault-7c9f4df459
      uid: 4cd4002b-a051-4f80-abef-fee590cd1ce7
    resourceVersion: "4975984"
    uid: 7c369ad0-e1f8-4e5b-98ca-56c0f80e776d
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/keyvault:27.0
      imagePullPolicy: IfNotPresent
      name: privx-keyvault
      ports:
      - containerPort: 8090
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fdfm6
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: keyvault
    serviceAccountName: keyvault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-fdfm6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0d632342e8187d637ef04f9684940d85a9ee2be7d75f4f0e6cc7c432e87ac408
      image: public.ecr.aws/sshprivx/keyvault:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/keyvault@sha256:3eec2990cd1c467ae8796009811f08690dd56d0561c0851f18fd8e724d95dfe3
      lastState: {}
      name: privx-keyvault
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:09Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.102
    podIPs:
    - ip: 172.16.0.102
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-license-manager-8d5896c4-
    labels:
      app.kubernetes.io/name: privx-license-manager
      pod-template-hash: 8d5896c4
    name: privx-license-manager-8d5896c4-mgxvx
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-license-manager-8d5896c4
      uid: 483504ce-2f61-4b63-82c5-fbd01d1f6275
    resourceVersion: "4976049"
    uid: 33ce03db-0565-4df8-bbad-7bf99fb06288
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      - name: LICBE_PROFILE
        value: prod
      - name: PRIVX_LICENSE_CODE
        value: db035529-835c-4c57-b3df-f6e6fee84667
      image: public.ecr.aws/sshprivx/license-manager:27.0
      imagePullPolicy: IfNotPresent
      name: privx-license-manager
      ports:
      - containerPort: 8101
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2btgh
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: license-manager
    serviceAccountName: license-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-2btgh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fd6624c1ed7b12a39d4e689bcf4de5654d21632d14888f2721b277249725060f
      image: public.ecr.aws/sshprivx/license-manager:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/license-manager@sha256:c8c913c8eff104e636d3e00981837583b77f0d5367bd04a4228841c64d951ea6
      lastState: {}
      name: privx-license-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:12Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.111
    podIPs:
    - ip: 172.16.0.111
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-monitor-service-6fdf5b799b-
    labels:
      app.kubernetes.io/name: privx-monitor-service
      pod-template-hash: 6fdf5b799b
    name: privx-monitor-service-6fdf5b799b-8pm5n
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-monitor-service-6fdf5b799b
      uid: c9fdb8d5-c777-43af-ba39-706303492134
    resourceVersion: "4976022"
    uid: 399162a1-35aa-4423-9470-9a77b0bac24c
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/monitor-service:27.0
      imagePullPolicy: IfNotPresent
      name: privx-monitor-service
      ports:
      - containerPort: 8092
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mz74f
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: monitor-service
    serviceAccountName: monitor-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-mz74f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8564afb2e37b1781b08ae462294f754169a9c604241817756c5578891d4e3bac
      image: public.ecr.aws/sshprivx/monitor-service:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/monitor-service@sha256:2d8527c5edf0286926adc818e060596c2fa12ca3ac3879813f9115442296d587
      lastState: {}
      name: privx-monitor-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:13Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.144
    podIPs:
    - ip: 172.16.0.144
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-network-access-manager-868b4f4454-
    labels:
      app.kubernetes.io/name: privx-network-access-manager
      pod-template-hash: 868b4f4454
    name: privx-network-access-manager-868b4f4454-xtsnn
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-network-access-manager-868b4f4454
      uid: adf57c18-57f1-475e-a5a6-55db785299ad
    resourceVersion: "4975991"
    uid: 00f82fbb-1a47-4345-b9a2-552e9011e0df
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/network-access-manager:27.0
      imagePullPolicy: IfNotPresent
      name: privx-network-access-manager
      ports:
      - containerPort: 8899
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mqh9v
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: network-access-manager
    serviceAccountName: network-access-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-mqh9v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3616b8a1f9084a4c02441585758bcb5770ade57d617d2672e1f13f577097a086
      image: public.ecr.aws/sshprivx/network-access-manager:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/network-access-manager@sha256:9be4552716a75378ba04981f5393769ab48ef7f9cb2c717cb467d0766118049d
      lastState: {}
      name: privx-network-access-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:10Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.103
    podIPs:
    - ip: 172.16.0.103
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-nginx-59c94748f6-
    labels:
      app.kubernetes.io/name: privx-nginx
      pod-template-hash: 59c94748f6
    name: privx-nginx-59c94748f6-xg27f
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-nginx-59c94748f6
      uid: 07d3f7fe-46cf-42cb-9685-fe04c6728d9d
    resourceVersion: "4975978"
    uid: bd3cf52d-bf24-4c76-8ef2-677b17efd7e7
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/nginx:27.0
      imagePullPolicy: IfNotPresent
      name: privx-nginx
      ports:
      - containerPort: 8444
        name: http
        protocol: TCP
      - containerPort: 80
        name: non-tls
        protocol: TCP
      - containerPort: 8443
        name: client-cert
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: privx-config
        subPath: nginxtmp
      - mountPath: /var/log/nginx
        name: privx-config
        subPath: nginxlog
      - mountPath: /etc/nginx/privx/
        name: privx-config
        subPath: nginxprivx
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /etc/nginx/tls
        name: privx-tls-vol
      - mountPath: /etc/nginx/conf.d
        name: nginx-location-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xfcmt
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: nginx
    serviceAccountName: nginx
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: privx-tls-vol
      secret:
        defaultMode: 420
        secretName: privx-tls
    - configMap:
        defaultMode: 420
        items:
        - key: privx.conf
          path: privx.conf
        name: nginx-config
      name: nginx-location-config
    - name: kube-api-access-xfcmt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://162a6984c2365d220bbc77fd2ee84fa9a609ef24ceb80d8b1ca1ab5404993aed
      image: public.ecr.aws/sshprivx/nginx:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/nginx@sha256:0d19917656c40c3776927830b969efdf87edb8e1024b22169b88f741fda9e345
      lastState: {}
      name: privx-nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:09Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.101
    podIPs:
    - ip: 172.16.0.101
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:00Z"
    generateName: privx-rdp-mitm-5f57b88556-
    labels:
      app.kubernetes.io/name: privx-rdp-mitm
      pod-template-hash: 5f57b88556
    name: privx-rdp-mitm-5f57b88556-ntlrw
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-rdp-mitm-5f57b88556
      uid: ebc199e7-26f1-4423-89e9-a453994fc980
    resourceVersion: "4975919"
    uid: ff9d8851-925c-4ec5-85c3-42c3d37de394
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/rdp-mitm:27.0
      imagePullPolicy: IfNotPresent
      name: privx-rdp-mitm
      ports:
      - containerPort: 8093
        name: http
        protocol: TCP
      - containerPort: 3389
        name: rdp
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: privx-config
        subPath: privxrdpmitmtmp
      - mountPath: /var/run
        name: privx-config
        subPath: privxredemption
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/privx/audit
        name: privx-config
        subPath: privxaudit
      - mountPath: /etc/nginx/tls
        name: privx-tls-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h2xj
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    initContainers:
    - args:
      - echo copying rdpmitm static resources; cp -rf rdpmitm/* /opt/privx/etc/rdpmitm/;
        echo generating redemption certs; ./rdpmitm/scripts/redemption_cert.sh;
      command:
      - /bin/sh
      - -c
      env:
      - name: KEY_PASS
        value: inquisition
      image: public.ecr.aws/sshprivx/rdp-mitm-conf:27.0
      imagePullPolicy: IfNotPresent
      name: conf-copier
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/tls
        name: privx-tls-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h2xj
        readOnly: true
    nodeName: 10.128.0.117
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: rdp-mitm
    serviceAccountName: rdp-mitm
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: privx-tls-vol
      secret:
        defaultMode: 420
        secretName: privx-tls
    - name: kube-api-access-8h2xj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6c17432bc66a3d44d41b7835df345dea27b13b715ba3ee4668214735d92706a1
      image: public.ecr.aws/sshprivx/rdp-mitm:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/rdp-mitm@sha256:b1ce957da53b31dfd090b94a309273e5e43a16dfdabc0cbb1c78e75865e62f26
      lastState: {}
      name: privx-rdp-mitm
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:07Z"
    hostIP: 10.128.0.117
    initContainerStatuses:
    - containerID: docker://f89028749dbd5d873ab0b8d42c376c3a7d89592e5f4f687fcc165393a0b7a1f7
      image: public.ecr.aws/sshprivx/rdp-mitm-conf:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/rdp-mitm-conf@sha256:c3bdf93824c0e9401ab2843ab38a161dec457b4b4902c3a32aca1757e777897a
      lastState: {}
      name: conf-copier
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://f89028749dbd5d873ab0b8d42c376c3a7d89592e5f4f687fcc165393a0b7a1f7
          exitCode: 0
          finishedAt: "2023-03-29T10:02:05Z"
          reason: Completed
          startedAt: "2023-03-29T10:02:03Z"
    phase: Running
    podIP: 172.16.0.71
    podIPs:
    - ip: 172.16.0.71
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-rdp-proxy-6dbcfbc656-
    labels:
      app.kubernetes.io/name: privx-rdp-proxy
      pod-template-hash: 6dbcfbc656
    name: privx-rdp-proxy-6dbcfbc656-gkb2g
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-rdp-proxy-6dbcfbc656
      uid: 9fd3acf4-3b54-481c-835f-7efd82edb924
    resourceVersion: "4975999"
    uid: 205a38e7-6646-4240-937a-454851de90f6
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      - name: HOME
        value: /home/privx
      image: public.ecr.aws/sshprivx/rdp-proxy:27.0
      imagePullPolicy: IfNotPresent
      name: privx-rdp-proxy
      ports:
      - containerPort: 8087
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: privx-config
        subPath: rdpproxytmp
      - mountPath: /home/privx
        name: privx-config
        subPath: rdpproxyhome
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/privx/audit
        name: privx-config
        subPath: privxaudit
      - mountPath: /guacamole-server
        name: privx-config
        subPath: guacamole
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m2nbf
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: rdp-proxy
    serviceAccountName: rdp-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-m2nbf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ed4ac487c2bae268507e568a37259f27d46ab71430e1cb580e9ca119bc0e3b24
      image: public.ecr.aws/sshprivx/rdp-proxy:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/rdp-proxy@sha256:7b3ce1a8069c50078df36a167dc2d8547c42eec142926fdcc9eb68ed1d065a20
      lastState: {}
      name: privx-rdp-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:10Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.106
    podIPs:
    - ip: 172.16.0.106
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-role-store-565d9d6f86-
    labels:
      app.kubernetes.io/name: privx-role-store
      pod-template-hash: 565d9d6f86
    name: privx-role-store-565d9d6f86-nlr4p
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-role-store-565d9d6f86
      uid: 9d31dfda-f792-442d-9e20-c101d5f330e3
    resourceVersion: "4976038"
    uid: f5f11433-6391-49a3-8360-30a7a87c32ab
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/role-store:27.0
      imagePullPolicy: IfNotPresent
      name: privx-role-store
      ports:
      - containerPort: 8081
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bjxbl
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: role-store
    serviceAccountName: role-store
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-bjxbl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://63c2819b1b5a5ae243c84404ab3d84a57d55713ac1a6f78b25dd9256b60d2baf
      image: public.ecr.aws/sshprivx/role-store:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/role-store@sha256:ded2f4e0abb5e201f02c5e90e40d6e78b8c5bd203e2ff0c07f02c0e62e61b7a3
      lastState: {}
      name: privx-role-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:12Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.108
    podIPs:
    - ip: 172.16.0.108
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-secrets-manager-7574d77f65-
    labels:
      app.kubernetes.io/name: privx-secrets-manager
      pod-template-hash: 7574d77f65
    name: privx-secrets-manager-7574d77f65-lw6p9
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-secrets-manager-7574d77f65
      uid: 071e67ce-23a9-444d-af77-96aa0d7e60d0
    resourceVersion: "4975872"
    uid: 949c095d-ea69-4366-8ec5-2e9e58cb9ddf
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/secrets-manager:27.0
      imagePullPolicy: IfNotPresent
      name: privx-secrets-manager
      ports:
      - containerPort: 8100
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5hhm5
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.72
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: secrets-manager
    serviceAccountName: secrets-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-5hhm5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0a6bd84b172d8e903b2ce8fd4600e5f7a34498b5f1f4c9fb9f694b74625b601e
      image: public.ecr.aws/sshprivx/secrets-manager:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/secrets-manager@sha256:7f435521b4ca5c826cab14eeb50c8c5d8fed25f851e22210707e938bb49ed6ae
      lastState: {}
      name: privx-secrets-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:03Z"
    hostIP: 10.128.0.72
    phase: Running
    podIP: 172.16.0.57
    podIPs:
    - ip: 172.16.0.57
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-settings-cf496c746-
    labels:
      app.kubernetes.io/name: privx-settings
      pod-template-hash: cf496c746
    name: privx-settings-cf496c746-tn2x8
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-settings-cf496c746
      uid: 14c53356-f2e2-4898-83c3-d62a103fa965
    resourceVersion: "4976072"
    uid: 56b68e27-c42c-4ac6-b81f-686059a06f1a
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/settings:27.0
      imagePullPolicy: IfNotPresent
      name: privx-settings
      ports:
      - containerPort: 8099
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mjzfw
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: settings
    serviceAccountName: settings
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-mjzfw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8301424f1b67b2cb268eece17ad81e9054b6775a4a6222215a12ecc45977c2d3
      image: public.ecr.aws/sshprivx/settings:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/settings@sha256:779c7b1fd3cedee98fe210324a4a1ffa7d7fcdd3d1552aa0e4644ed9b9d1d967
      lastState: {}
      name: privx-settings
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:14Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.145
    podIPs:
    - ip: 172.16.0.145
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-ssh-mitm-7878d6f666-
    labels:
      app.kubernetes.io/name: privx-ssh-mitm
      pod-template-hash: 7878d6f666
    name: privx-ssh-mitm-7878d6f666-4nlzh
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-ssh-mitm-7878d6f666
      uid: eb521264-9612-42c5-b679-2abefa5f9a96
    resourceVersion: "4975878"
    uid: 225138b8-9dbd-46b7-a1be-e2f5d6adcaf0
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/ssh-mitm:27.0
      imagePullPolicy: IfNotPresent
      name: privx-ssh-mitm
      ports:
      - containerPort: 8095
        name: http
        protocol: TCP
      - containerPort: 2222
        name: ssh-proxy
        protocol: TCP
      - containerPort: 1080
        name: socks-proxy
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: privx-config
        subPath: privxsshmitmshareddrive
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/privx/audit
        name: privx-config
        subPath: privxaudit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8pp6t
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.117
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: ssh-mitm
    serviceAccountName: ssh-mitm
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-8pp6t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://09eed216cd473e290eb035a01b257a7404da6112456c90495201ee46b7825723
      image: public.ecr.aws/sshprivx/ssh-mitm:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/ssh-mitm@sha256:ccb5944db8ddc754b7b481d19189c96f917df15e0418ea846183292f7cb10c42
      lastState: {}
      name: privx-ssh-mitm
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:04Z"
    hostIP: 10.128.0.117
    phase: Running
    podIP: 172.16.0.72
    podIPs:
    - ip: 172.16.0.72
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-ssh-proxy-b6597f778-
    labels:
      app.kubernetes.io/name: privx-ssh-proxy
      pod-template-hash: b6597f778
    name: privx-ssh-proxy-b6597f778-jw28l
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-ssh-proxy-b6597f778
      uid: ce5feddd-27e1-4ca7-b35f-f59b4388afd0
    resourceVersion: "4976027"
    uid: 84d3f192-9904-41ae-9321-c36960087414
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/ssh-proxy:27.0
      imagePullPolicy: IfNotPresent
      name: privx-ssh-proxy
      ports:
      - containerPort: 8880
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: privx-config
        subPath: privxsshproxyshareddrive
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/privx/audit
        name: privx-config
        subPath: privxaudit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79qf9
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: ssh-proxy
    serviceAccountName: ssh-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-79qf9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e9f2beeb71911b91d36e7b09a3f26ae5edec8e1ca177a9451f2666b8efde77ce
      image: public.ecr.aws/sshprivx/ssh-proxy:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/ssh-proxy@sha256:e6e41e577388f415d37683f25ac2f26ce493dcbe9830f9704adbbfea09c9f1c7
      lastState: {}
      name: privx-ssh-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:11Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.107
    podIPs:
    - ip: 172.16.0.107
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-trail-index-555b9c688d-
    labels:
      app.kubernetes.io/name: privx-trail-index
      pod-template-hash: 555b9c688d
    name: privx-trail-index-555b9c688d-bs5qk
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-trail-index-555b9c688d
      uid: 06478683-c452-417a-aaec-e6e8e7c94406
    resourceVersion: "4976061"
    uid: 00d5bff0-268a-4fdc-b588-adfab61e629c
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/trail-index:27.0
      imagePullPolicy: IfNotPresent
      name: privx-trail-index
      ports:
      - containerPort: 8094
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/privx/audit
        name: privx-config
        subPath: privxaudit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9wgx
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: trail-index
    serviceAccountName: trail-index
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-q9wgx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://45353e7bf384ee6b27719e8dc37fa0a85ed03648886c14c9b1868642db8f0d6b
      image: public.ecr.aws/sshprivx/trail-index:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/trail-index@sha256:f6aeeba912c3be72558eae2ded7a670af72d42969593716f1f22bca61b123fd2
      lastState: {}
      name: privx-trail-index
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:16Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.147
    podIPs:
    - ip: 172.16.0.147
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:01Z"
    generateName: privx-user-store-859b794d46-
    labels:
      app.kubernetes.io/name: privx-user-store
      pod-template-hash: 859b794d46
    name: privx-user-store-859b794d46-2v5rg
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-user-store-859b794d46
      uid: ea8fb3e5-c8b0-43b8-b57f-e374f82f407f
    resourceVersion: "4975940"
    uid: 71b8c540-276c-4fc2-bae7-01b738311286
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/user-store:27.0
      imagePullPolicy: IfNotPresent
      name: privx-user-store
      ports:
      - containerPort: 8084
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x9g9m
        readOnly: true
    dnsConfig:
      options:
      - name: timeout
        value: "2"
      - name: single-request-reopen
        value: ""
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.117
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: user-store
    serviceAccountName: user-store
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-x9g9m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0982250e6158014067bf32d4d9c9a1ad873f07f780020aced2a76cf066118412
      image: public.ecr.aws/sshprivx/user-store:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/user-store@sha256:61c870be59ecd70e0dd8094ba8735013c300ee1b74ecb11d514433c797b63919
      lastState: {}
      name: privx-user-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:09Z"
    hostIP: 10.128.0.117
    phase: Running
    podIP: 172.16.0.113
    podIPs:
    - ip: 172.16.0.113
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:02Z"
    generateName: privx-vault-6c9b5449c8-
    labels:
      app.kubernetes.io/name: privx-vault
      pod-template-hash: 6c9b5449c8
    name: privx-vault-6c9b5449c8-wprcx
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-vault-6c9b5449c8
      uid: ad3fe3c8-d233-4732-80e1-94acf86bf443
    resourceVersion: "4976066"
    uid: c4ee0b60-3904-47b8-b07b-7a3f25694043
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/vault:27.0
      imagePullPolicy: IfNotPresent
      name: privx-vault
      ports:
      - containerPort: 8098
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jml2q
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    nodeName: 10.128.0.84
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: vault
    serviceAccountName: vault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-jml2q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0aa518e1e809a8c5922cabb63e75fcb8235484cdc158e4ac1043c4e02d45a894
      image: public.ecr.aws/sshprivx/vault:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/vault@sha256:c8eb2e78700e4303da0e2b404e56cced14df2e0c6209fbfccdbb34b29e755eeb
      lastState: {}
      name: privx-vault
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:16Z"
    hostIP: 10.128.0.84
    phase: Running
    podIP: 172.16.0.146
    podIPs:
    - ip: 172.16.0.146
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: psp-global
    creationTimestamp: "2023-03-29T10:02:02Z"
    generateName: privx-workflow-engine-699679dcd4-
    labels:
      app.kubernetes.io/name: privx-workflow-engine
      pod-template-hash: 699679dcd4
    name: privx-workflow-engine-699679dcd4-qbrrt
    namespace: privx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: privx-workflow-engine-699679dcd4
      uid: a952bc6b-f009-4014-b224-92e92c3168c5
    resourceVersion: "4976089"
    uid: eea368d7-2b39-42b1-a171-dfc1cf74a0fb
  spec:
    containers:
    - env:
      - name: IS_DOCKER_ENV
        value: "yes"
      - name: KUBERNETES_MODE
        value: "true"
      - name: SSH_LOG_LEVEL
        value: DEBUG
      - name: SMARTCARD_LOG_LEVEL
        value: DEBUG
      - name: SSH_TRACE
        value: "3"
      - name: SSH_AUDIT_PRIORITY
        value: "6"
      image: public.ecr.aws/sshprivx/workflow-engine:27.0
      imagePullPolicy: IfNotPresent
      name: privx-workflow-engine
      ports:
      - containerPort: 8085
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/cert
        name: privx-config
        subPath: privxcert
      - mountPath: /opt/privx/keyvault
        name: privx-config
        subPath: keyvault
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /etc/nginx/ssl
        name: privx-config
        subPath: nginxssl
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4df8t
        readOnly: true
    dnsConfig:
      options:
      - name: single-request-reopen
        value: ""
      - name: timeout
        value: "2"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: docker-pull-secret
    - name: dockerhub-registry-creds-incident
    initContainers:
    - args:
      - echo copying templates; cp -rf templates/* /opt/privx/etc/templates/; echo
        copying locales; cp -rf locales/* /opt/privx/etc/locales/workflowengine;
      command:
      - /bin/sh
      - -c
      image: public.ecr.aws/sshprivx/workflow-engine-conf:27.0
      imagePullPolicy: IfNotPresent
      name: conf-copier
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 5111
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/privx/etc
        name: privx-config
        subPath: privxetc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4df8t
        readOnly: true
    nodeName: 10.128.0.117
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 5111
      runAsNonRoot: true
      runAsUser: 5111
    serviceAccount: workflow-engine
    serviceAccountName: workflow-engine
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: privx-config
      persistentVolumeClaim:
        claimName: privx-claim
    - name: kube-api-access-4df8t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T10:02:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3d9b70293569b69bdd13e648e9b30ad07b0a05af568c592b09a9cd533be64f89
      image: public.ecr.aws/sshprivx/workflow-engine:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/workflow-engine@sha256:5dcb9be54d11f16014c801ce1feb22f758d3bf3876c34fc05c4cf7fdc790123d
      lastState: {}
      name: privx-workflow-engine
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T10:02:18Z"
    hostIP: 10.128.0.117
    initContainerStatuses:
    - containerID: docker://f010174bdea67d9c379265211bce4f527e7402285d3181e9955d81d81a178c91
      image: public.ecr.aws/sshprivx/workflow-engine-conf:27.0
      imageID: docker-pullable://public.ecr.aws/sshprivx/workflow-engine-conf@sha256:c58d2fcdb3e78ad1b35d5b7d3147af13dca0da13ca2e92d0ba132aa03bba33da
      lastState: {}
      name: conf-copier
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://f010174bdea67d9c379265211bce4f527e7402285d3181e9955d81d81a178c91
          exitCode: 0
          finishedAt: "2023-03-29T10:02:13Z"
          reason: Completed
          startedAt: "2023-03-29T10:02:12Z"
    phase: Running
    podIP: 172.16.0.114
    podIPs:
    - ip: 172.16.0.114
    qosClass: BestEffort
    startTime: "2023-03-29T10:02:02Z"
kind: List
metadata:
  resourceVersion: ""
